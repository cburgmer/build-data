resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource

resources:
  - name: keyval
    type: keyval

  - name: git
    type: git
    source:
      branch: master
      uri: https://github.com/cburgmer/build-facts.git

jobs:
  - name: build
    plan:
      - task: compile
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: alpine}
          run:
            path: sh
            args:
              - -xc
              - |
                RUNTIME=$(( RANDOM % 10 ))
                sleep $RUNTIME

                OUTCOME=$(( RANDOM % 3 ))
                if [ $OUTCOME -eq 0 ]; then
                  exit 1
                fi
      - task: test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: alpine}
          outputs:
            - name: keyvalout
          run:
            path: sh
            args:
              - -xc
              - |
                RUNTIME=$(( RANDOM % 10 ))
                sleep $RUNTIME

                OUTCOME=$(( RANDOM % 3 ))
                if [ $OUTCOME -eq 0 ]; then
                  exit 1
                fi

                echo 'dont=care' > ./keyvalout/keyval.properties
      - put: keyval
        params: {file: keyvalout/keyval.properties}

  - name: deploy
    plan:
      - in_parallel:
          - get: keyval
            passed: [build]
            trigger: true
          - get: git
      - task: deploy
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: alpine}
          run:
            path: sh
            args:
              - -xc
              - |
                RUNTIME=$(( RANDOM % 10 ))
                sleep $RUNTIME

                OUTCOME=$(( RANDOM % 3 ))
                if [ $OUTCOME -eq 0 ]; then
                  exit 1
                fi

  - name: smoketest
    plan:
      - get: keyval
        passed: [deploy]
        trigger: true
      - task: test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: alpine}
          run:
            path: sh
            args:
              - -xc
              - |
                RUNTIME=$(( RANDOM % 10 ))
                sleep $RUNTIME

                OUTCOME=$(( RANDOM % 2 ))
                if [ $OUTCOME -eq 0 ]; then
                  exit 1
                fi
